---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: poc-cloud-sql
spec:
  defaultBackend:
    service:
      name: poc-cloud-sql
      port:
        number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloud-sql-map
data:
  profile: dev
  project_id: ita-habaus-dev-001
  database_name: db_habacus_dev
  instance_name: ita-habaus-dev-001:europe-west3:mysql-proxy-service-dev-1
  host: "10.113.16.3"
  db_port: "3306"
---
apiVersion: v1
kind: Secret
metadata:
  name: credentials
data:
  username: aGFiYWN1cw==
  password: aGFiYWN1cw==
# echo -n "habacus" | base64
# echo -n "habacus" | base64
---
apiVersion: v1
kind: Service
metadata:
  name: poc-cloud-sql
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "poc-cloud-sql"}'
spec:
  ports:
  - port: 80
    targetPort: 8081
    protocol: TCP
    name: http
  selector:
    app: poc-cloud-sql
  type: ClusterIP
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: poc-cloud-sql
spec:
  healthCheck:
    type: HTTP
    requestPath: /actuator/health
    port: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-cloud-sql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poc-cloud-sql
  template:
    metadata:
      labels:
        app: poc-cloud-sql
    spec:
      serviceAccountName: ksa-esp
      containers:
      - name: esp
        image: eu.gcr.io/endpoints-release/endpoints-runtime:2
        args: [
          "--listener_port=8081",
          "--backend=127.0.0.1:8080",
          "--service=poc-cloud-sql.endpoints.ita-habaus-dev-001.cloud.goog",
          "--rollout_strategy=managed",
          "--healthz=/actuator/health",
        ]
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8081
        ports:
          - containerPort: 8081
      - name: api
        image: eu.gcr.io/ita-habaus-dev-001/poc-cloud-sql:latest
        imagePullPolicy: Always
        env:
          - name: USER
            valueFrom:
              secretKeyRef:
                name: credentials
                key: username
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: credentials
                key: password
          - name: CLOUD_SQL_DATABASE_NAME
            valueFrom:
              configMapKeyRef:
                name: cloud-sql-map
                key: database_name 
          - name: DEVSHELL_PROJECT_ID
            valueFrom:
              configMapKeyRef:
                name: cloud-sql-map
                key: project_id
          - name: INSTANCE_NAME
            valueFrom:
              configMapKeyRef:
                name: cloud-sql-map
                key: instance_name
          - name: DATABASE_HOST
            valueFrom:
              configMapKeyRef:
                name: cloud-sql-map
                key: host
          - name: DATABASE_PORT
            valueFrom:
              configMapKeyRef:
                name: cloud-sql-map
                key: db_port
        ports:
          - containerPort: 8080